# Add yarn binaries to PATH
export PATH=$PATH:/home/damejia/.yarn/bin

# Add Go 1.10 to Path
export PATH=$PATH:/usr/local/go/bin

# Add GOPATH for GO language
export GOPATH=/home/damejia/Repositories

# Add Go bin path (created in the GOPATH/bin by GO
# This will allow me to run the binaries in $GOPATH/bin like `excercism`
# go_bin selects the first directory in the $GOPATH
go_bin=$(echo $GOPATH | awk -F":" '{print $1}')
export PATH=$PATH:$go_bin/bin

# Add custom scripts
export PATH=$PATH:/home/damejia/bin

# Add Rust bin
export PATH=$PATH:/home/damejia/.cargo/bin

# Add MongoDB here
export PATH=$PATH:/home/damejia/opt/mongodb_3.6.5/bin

# Source CERN-ROOT data analysis framework
# This enables root notebooks in jupyter
#source /home/damejia/opt/root/root7_build/bin/thisroot.sh

# ESP32 Toolchain
export IDF_PATH=/home/damejia/opt/esp/esp-idf
export PATH=$PATH:$HOME/opt/esp/xtensa-esp32-elf/bin

# Parallelo Go PATHs
# Sets the gopath for parallelo
set_gopath_parallelo(){
  export GOPATH="/home/damejia/Repositories/src/bitbucket.org/Daniel-M/PARALLELO.AI/Go"
  echo "Go path set to '$GOPATH'"
}

setup_goparallelo_gitlab(){
  set_gopath_parallelo
  cd "/home/damejia/Repositories/src/bitbucket.org/Daniel-M/PARALLELO.AI/Go/src/gitlab.com"
}

setup_goparallelo_bitbucket(){
  set_gopath_parallelo
  cd "/home/damejia/Repositories/src/bitbucket.org/Daniel-M/PARALLELO.AI/Go/src/bitbucket.org"
}

set_gopath_daniel(){
  export GOPATH="/home/damejia/Repositories"
  echo "Go path set to '$GOPATH'"
}

setup_godaniel_gitlab(){
  set_gopath_daniel
  cd "/home/damejia/Repositories/src/gitlab.com/Daniel-M"
}

setup_godaniel_github(){
  set_gopath_daniel
  cd "/home/damejia/Repositories/src/github/Daniel-M"
}

setup_godaniel_bitbucket(){
  set_gopath_daniel
  cd "/home/damejia/Repositories/src/bitbucket.org/Daniel-M"
}

set_nodedevelopment(){
  export NODE_ENV="development"
  echo "NODE_ENV path set to '$NODE_ENV'"
}

set_nodeproduction(){
  export NODE_ENV="production"
  echo "NODE_ENV path set to '$NODE_ENV'"
}

set_espidf_path(){
  if [ -z ${IDF_PATH} ]; then
    echo "IDF_PATH must be set before including this script."
  else
    IDF_ADD_PATHS_EXTRAS="${IDF_PATH}/components/esptool_py/esptool:${IDF_PATH}/components/espcoredump:${IDF_PATH}/components/partition_table/"
    export PATH="${PATH}:${IDF_ADD_PATHS_EXTRAS}"
    echo "Added to PATH: ${IDF_ADD_PATHS_EXTRAS}"
  fi
}

setup_espidf() {
  set_espidf_path
  cd "/home/damejia/opt/esp/my_projects" 
}

# history + grep
# grepstory word looks for "word" in the bash history
grepstory() {
  usage(){
    echo "Usage: grepstory word"
  } # define is_file_exits function

 # call usage() function if filename not supplied
 if [[ ! -z $1 ]]
 then
   history | grep $1
 else
   usage
 fi
}

# env + grep
# grepenv word looks for "word" in the bash history
grepenv() {
  usage(){
    echo "Usage: grepenv ENV_VAR_REGEXP"
  } # define is_file_exits function

 # call usage() function if filename not supplied
 if [[ ! -z $1 ]]
 then
   env | grep $1
 else
   usage
 fi
}

# neovim open
# nvimopen ext opens all .ext files under the tree
nvim_open(){
  usage(){
    echo "Usage: nvimopen file extension without dot"
  } # define is_file_exits function

  # call usage() function if filename not supplied
  if [[ ! -z $1 ]]
  then
    nvim $(find -type f -name "*.$1" | awk 'BEGIN{text=""}{text=text" "$1} END{print text}')
  else
    usage
  fi
}

xc_pwd(){
  pwd | sed 's/\r//g' | xclip -sel clip
}

xc_file_contents(){
  #!/bin/bash
  # file.sh: a sample shell script to demonstrate the concept of Bash shell functions
  # define usage function
  usage(){
    echo "Usage: xc_file_contents filename"
  } # define is_file_exits function
  # $f -> store argument passed to the script
  is_file_exits(){
    local f="$1"
    [[ -f "$f" ]] && return 0 || return 1
  }
  # invoke usage
  # call usage() function if filename not supplied
  [[ $# -eq 0 ]] && usage # Invoke is_file_exits
  if ( is_file_exits "$1" )
  then
    cat $1 | xclip -sel clip
    cat $1 | xclip -sel primary
    echo "Contents of file '$1' copied to clipboard"
  else
    echo "File $1 not found"
  fi
}

xc_readlink(){
  #!/bin/bash
  # file.sh: a sample shell script to demonstrate the concept of Bash shell functions
  # define usage function
  usage(){
    echo "Usage: xc_readlink filename"
  } # define is_file_exits function
  # $f -> store argument passed to the script
  is_file_exits(){
    local f="$1"
    [[ -f "$f" ]] && return 0 || return 1
  }
  # invoke usage
  # call usage() function if filename not supplied
  [[ $# -eq 0 ]] && usage # Invoke is_file_exits
  if ( is_file_exits "$1" )
  then
    route=$(readlink -f $1)
    echo -n $route | xclip -sel clip
    echo -n $route | xclip -sel primary
    echo "Route to the file '$1' copied to clipboard"
  else
    echo "File $1 not found"
  fi
}

## Show git branch in prompt
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[31m\]\$(parse_git_branch)\[\033[00m\]\$ "


git_helper() {
  usage(){
    echo "Usage: git_aid [command]"
    echo ""
    echo "Where [command] is any of,"
    echo " * last commit. Shows last commit"
    echo " * last branch. Shows last commit"
    return 1
  } # define is_file_exits function

  
  [[ $# -eq 0 ]] && usage
  git fetch --all
  if [ "${1}" == "last" ]; then
    if [ "${2}" == "commit" ]; then
      git log --color --format="%C(magenta)%cr %C(bold red)%d%Creset %C(bold cyan)%H%Creset %s %C(bold blue)<%an>%Creset" | head -n 1
    elif [ "${2}" == "branch" ]; then
     git branch -r | grep -v HEAD | while read b; do git log --color  --format="%ci _%C(magenta)%cr %C(bold red)$b%d%Creset%C(bold cyan) %H%Creset %s %C(bold blue)<%an>%Creset" $b | head -n 1; done | sort -r | cut -d_ -f2- | sed 's;origin/;;g' | head -n 1
    else
      usage
      echo ""
      echo "Unrecognized command '$1'"
    fi
  elif [ "${1}" == "recent" ]; then
    if [ "${2}" == "branches" ] || [ "${2}" == "commits" ]; then
      git branch -r | grep -v HEAD | while read b; do git log --color --format="%ci _%C(magenta)%cr %C(bold red)$b%d%Creset%C(bold cyan) %H%Creset %s %C(bold blue)<%an>%Creset" $b | head -n 10; done | sort -r | cut -d_ -f2- | sed 's;origin/;;g' | head -n 10 
    fi
  else
    usage
    echo ""
    echo "Unrecognized command '$1 $2'"
  fi
}

# Adding handy aliases
alias rm='rm -vi'

alias cp='cp -vi'
alias mv='mv -vi'

alias ls='ls -h --color=auto'
alias ll='ls -l --color=auto'
alias la='ll -a --color=auto'

alias less='less -r'

# Environment aliases
alias bitbucket='cd /home/damejia/Repositories/src/bitbucket.org/Daniel-M'
alias github='cd /home/damejia/Repositories/src/github.com/Daniel-M'
alias gitlab='cd /home/damejia/Repositories/src/gitlab.com/Daniel-M'
alias gitlab_parallelo='cd /home/damejia/Repositories/src/bitbucket.org/Daniel-M/PARALLELO.AI/Go/src/gitlab.com'
alias ddropbox='cd /home/damejia/Dropbox'
alias ddescargas='cd /home/damejia/Descargas'

alias Dualmonright='xrandr --output LVDS --auto --rotate normal --pos 0x0 --output CRT1 --auto --right-of LVDS'
alias Dualmonleft='xrandr --output LVDS --auto --rotate normal --pos 0x0 --output CRT1 --auto --left-of LVDS'
alias ColoredTerminal='export TERM=xterm-256color'

alias gfif-cluster='ssh -X biofisica_user1@gfif.udea.edu.co'
alias itm-cluster='ssh -X biofisicaudea@190.248.28.132'

alias MongoIB='mongo -u admin -p xudmaster5. --authenticationDatabase admin'
alias MongoBB='mongo --port 37017 -u admin -p papa123$. --authenticationDatabase admin --host 181.143.87.202'

# Volatile aliases

alias BStochastic="mupdf '/home/damejia/Books/Libros_y_Articulos_Regados/pdf/(Springer Series in Synergetics) Péter Érdi, Gábor Lente (auth.)-Stochastic Chemical Kinetics_ Theory and (Mostly) Systems Biological Applications-Springer New York (2014).pdf'"

alias BOksendal="mupdf '/home/damejia/Biophysics_Research/Undergraduate_Thesis/2-Bibliography/Oksendal_B._-_Stochastic_Differential_Equations_(5th_ed.).pdf'"

alias EquliPert='cd /home/damejia/Repositories/src/bitbucket.org/Daniel-M/EquilibriumPerturbationReversibleReaction'

alias Parallelo='cd /home/damejia/Repositories/src/bitbucket.org/Daniel-M/PARALLELO.AI'
